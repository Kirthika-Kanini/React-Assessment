{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kanini Software Solutions\\\\React(BigBang)\\\\Front-End\\\\hospitalmanagement\\\\src\\\\Component\\\\Approval\\\\AppointmentApproval.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Variables } from '../Variable';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Approval.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentApproval() {\n  _s();\n  const [registers, setRegisters] = useState([]);\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const fetchItems = () => {\n    axios.get(Variables.API_URL + 'Appointments').then(response => {\n      if (response.status === 200) {\n        setRegisters(response.data);\n      } else {\n        throw new Error('Failed to fetch registers');\n      }\n    }).catch(error => {\n      console.error('Error fetching registers:', error);\n      toast.error('Error fetching registers:', error.message);\n    });\n  };\n  const handleAccept = (registerId, currentStatus) => {\n    const updatedStatus = 'approved';\n\n    // Assign the fields to variables\n    const {\n      id,\n      patientName,\n      date,\n      time,\n      reasonForVisit\n    } = registers.find(register => register.id === registerId);\n\n    // Update the status in the database\n    axios.put(Variables.API_URL + `Appointments/${registerId}`, {\n      id,\n      patientName,\n      date,\n      time,\n      reasonForVisit,\n      status: updatedStatus\n    }).then(response => {\n      // Handle successful update\n      console.log('Status updated successfully');\n      // You can also update the local state if needed\n      // Example: Update the status locally\n      const updatedRegisters = registers.map(register => {\n        if (register.id === registerId) {\n          return {\n            ...register,\n            status: updatedStatus\n          };\n        }\n        return register;\n      });\n      setRegisters(updatedRegisters);\n    }).catch(error => {\n      console.error('Error updating status:', error);\n      toast.error('Error updating status:', error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"approval-container\",\n    children: registers.map((register, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${index % 4 === 0 ? 'first-card' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", register.patientName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", register.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Specialization: \", register.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", register.reasonForVisit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", register.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accept-button\",\n          onClick: () => handleAccept(register.id),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reject-button\",\n          onClick: () => handleReject(register.id),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, register.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentApproval, \"j8dxXsIsDtQQXPk69Vgwmtay3Yc=\");\n_c = AppointmentApproval;\nexport default AppointmentApproval;\nvar _c;\n$RefreshReg$(_c, \"AppointmentApproval\");","map":{"version":3,"names":["React","useEffect","useState","axios","Variables","toast","jsxDEV","_jsxDEV","AppointmentApproval","_s","registers","setRegisters","fetchItems","get","API_URL","then","response","status","data","Error","catch","error","console","message","handleAccept","registerId","currentStatus","updatedStatus","id","patientName","date","time","reasonForVisit","find","register","put","log","updatedRegisters","map","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleReject","_c","$RefreshReg$"],"sources":["C:/Kanini Software Solutions/React(BigBang)/Front-End/hospitalmanagement/src/Component/Approval/AppointmentApproval.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Variables } from '../Variable';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Approval.css';\r\nfunction AppointmentApproval() {\r\n  const [registers, setRegisters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  const fetchItems = () => {\r\n    axios\r\n      .get(Variables.API_URL + 'Appointments')\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          setRegisters(response.data);\r\n        } else {\r\n          throw new Error('Failed to fetch registers');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching registers:', error);\r\n        toast.error('Error fetching registers:', error.message);\r\n      });\r\n  };\r\n\r\n  const handleAccept = (registerId, currentStatus) => {\r\n    const updatedStatus = 'approved';\r\n  \r\n    // Assign the fields to variables\r\n    const { id, patientName,date,time ,reasonForVisit } = registers.find(register => register.id === registerId);\r\n  \r\n    // Update the status in the database\r\n    axios\r\n      .put(Variables.API_URL + `Appointments/${registerId}`, { id, patientName,date,time ,reasonForVisit, status: updatedStatus })\r\n      .then((response) => {\r\n        // Handle successful update\r\n        console.log('Status updated successfully');\r\n        // You can also update the local state if needed\r\n        // Example: Update the status locally\r\n        const updatedRegisters = registers.map((register) => {\r\n          if (register.id === registerId) {\r\n            return { ...register, status: updatedStatus };\r\n          }\r\n          return register;\r\n        });\r\n        setRegisters(updatedRegisters);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating status:', error);\r\n        toast.error('Error updating status:', error.message);\r\n      });\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"approval-container\">\r\n      {registers.map((register, index) => (\r\n        <div key={register.id} className={`card ${index % 4 === 0 ? 'first-card' : ''}`}>\r\n          <p>Name: {register.patientName}</p>\r\n          <p>Role: {register.date}</p>\r\n          <p>Specialization: {register.time}</p>\r\n          <p>Gender: {register.reasonForVisit}</p>\r\n          <p>Status: {register.status}</p>\r\n          <div className=\"button-container\">\r\n          <button className=\"accept-button\" onClick={() => handleAccept(register.id)}>Accept</button>&nbsp;\r\n          <button className=\"reject-button\" onClick={() => handleReject(register.id)}>Reject</button>\r\n        </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentApproval"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}