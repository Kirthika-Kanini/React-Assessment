{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kanini Software Solutions\\\\React(BigBang)\\\\Front-End\\\\hospitalmanagement\\\\src\\\\Component\\\\Patient\\\\Patient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Variables } from '../Variable';\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Patient() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if the user is authenticated\n    const isAuthenticated = getCookieValue('token');\n    if (!isAuthenticated) {\n      navigate('/login'); // Redirect to the login page if not authenticated\n    } else {\n      fetchPatients();\n    }\n  }, [navigate]);\n  const getCookieValue = name => {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith(`${name}=`)) {\n        return cookie.substring(name.length + 1);\n      }\n    }\n    return null;\n  };\n  const fetchPatients = () => {\n    axios.get(Variables.API_URL + 'Patients', {\n      headers: {\n        Authorization: `Bearer ${getCookieValue('token')}`\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        setPatients(response.data);\n      } else {\n        throw new Error('Failed to fetch patients');\n      }\n    }).catch(error => {\n      console.error('Error fetching patients:', error);\n      toast.error('Error fetching patients:', error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-3\",\n      children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://localhost:7224/uploads/patient/${patient.patImagePath}`,\n            className: \"card-img-top\",\n            alt: \"Patient Image\",\n            style: {\n              height: \"400px\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: patient.patientName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Gender: \", patient.gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Phone: \", patient.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Email: \", patient.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Address: \", patient.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Medical History: \", patient.medicalHistory]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Blood Group: \", patient.bloodGroup]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Preferred Language: \", patient.preferredLanguage]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, patient.patientId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n_s(Patient, \"wT1UPAc4OD0Jm8c50mNYrLnaves=\", false, function () {\n  return [useNavigate];\n});\n_c = Patient;\nvar _c;\n$RefreshReg$(_c, \"Patient\");","map":{"version":3,"names":["React","useState","useEffect","Variables","toast","useNavigate","axios","jsxDEV","_jsxDEV","Patient","_s","patients","setPatients","navigate","isAuthenticated","getCookieValue","fetchPatients","name","cookies","document","cookie","split","i","length","trim","startsWith","substring","get","API_URL","headers","Authorization","then","response","status","data","Error","catch","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","src","patImagePath","alt","style","height","objectFit","patientName","gender","phone","email","address","medicalHistory","bloodGroup","preferredLanguage","patientId","_c","$RefreshReg$"],"sources":["C:/Kanini Software Solutions/React(BigBang)/Front-End/hospitalmanagement/src/Component/Patient/Patient.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Variables } from '../Variable';\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nexport default function Patient() {\r\n    const [patients, setPatients] = useState([]);\r\n    const navigate = useNavigate();\r\n  \r\n    useEffect(() => {\r\n      // Check if the user is authenticated\r\n      const isAuthenticated = getCookieValue('token');\r\n      if (!isAuthenticated) {\r\n        navigate('/login'); // Redirect to the login page if not authenticated\r\n      } else {\r\n        fetchPatients();\r\n      }\r\n    }, [navigate]);\r\n  \r\n    const getCookieValue = (name) => {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.startsWith(`${name}=`)) {\r\n          return cookie.substring(name.length + 1);\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  \r\n    const fetchPatients = () => {\r\n      axios\r\n        .get(Variables.API_URL + 'Patients', {\r\n          headers: {\r\n            Authorization: `Bearer ${getCookieValue('token')}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            setPatients(response.data);\r\n          } else {\r\n            throw new Error('Failed to fetch patients');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching patients:', error);\r\n          toast.error('Error fetching patients:', error.message);\r\n        });\r\n    };\r\n  \r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h1>Patients</h1>\r\n  \r\n        <div className=\"row mt-3\">\r\n          {patients.map((patient) => (\r\n            <div className=\"col-md-4 mb-4\" key={patient.patientId}>\r\n              <div className=\"card\">\r\n                <img\r\n                  src={`https://localhost:7224/uploads/patient/${patient.patImagePath}`}\r\n                  className=\"card-img-top\"\r\n                  alt=\"Patient Image\"\r\n                  style={{ height: \"400px\", objectFit: \"cover\" }}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{patient.patientName}</h5>\r\n                  <p className=\"card-text\">Gender: {patient.gender}</p>\r\n                  <p className=\"card-text\">Phone: {patient.phone}</p>\r\n                  <p className=\"card-text\">Email: {patient.email}</p>\r\n                  <p className=\"card-text\">Address: {patient.address}</p>\r\n                  <p className=\"card-text\">Medical History: {patient.medicalHistory}</p>\r\n                  <p className=\"card-text\">Blood Group: {patient.bloodGroup}</p>\r\n                  <p className=\"card-text\">Preferred Language: {patient.preferredLanguage}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}