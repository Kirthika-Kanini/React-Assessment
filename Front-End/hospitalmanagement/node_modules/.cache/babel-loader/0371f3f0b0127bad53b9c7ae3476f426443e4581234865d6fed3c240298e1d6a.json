{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kanini Software Solutions\\\\React(BigBang)\\\\Front-End\\\\hospitalmanagement\\\\src\\\\Component\\\\Approval\\\\AdminApproval.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Variables } from '../Variable';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Approval.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminApproval() {\n  _s();\n  const [registers, setRegisters] = useState([]);\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const fetchItems = () => {\n    axios.get(Variables.API_URL + 'Users').then(response => {\n      if (response.status === 200) {\n        setRegisters(response.data);\n      } else {\n        throw new Error('Failed to fetch registers');\n      }\n    }).catch(error => {\n      console.error('Error fetching registers:', error);\n      toast.error('Error fetching registers:', error.message);\n    });\n  };\n  const handleAccept = id => {\n    const updatedRegisters = registers.map(register => {\n      if (register.id === id) {\n        return {\n          ...register,\n          status: 'approved'\n        };\n      }\n      return register;\n    });\n    setRegisters(updatedRegisters);\n    updateStatusInDatabase(id, 'approved');\n  };\n  const handleReject = id => {\n    const updatedRegisters = registers.map(register => {\n      if (register.id === id) {\n        return {\n          ...register,\n          status: 'declined'\n        };\n      }\n      return register;\n    });\n    setRegisters(updatedRegisters);\n    updateStatusInDatabase(id, 'declined');\n  };\n  const updateStatusInDatabase = (id, status) => {\n    axios.put(Variables.API_URL + `Users/${id}`, {\n      status\n    }).then(response => {\n      toast.success('Status updated successfully');\n    }).catch(error => {\n      console.error('Error updating status:', error);\n      console.error('Response:', error.response); // Log the response object\n      toast.error('Error updating status:', error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"approval-container\",\n    children: registers.map((register, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${index % 4 === 0 ? 'first-card' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", register.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", register.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Specialization: \", register.specialization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", register.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", register.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accept-button\",\n          onClick: () => handleAccept(register.id),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reject-button\",\n          onClick: () => handleReject(register.id),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, register.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminApproval, \"j8dxXsIsDtQQXPk69Vgwmtay3Yc=\");\n_c = AdminApproval;\nexport default AdminApproval;\nvar _c;\n$RefreshReg$(_c, \"AdminApproval\");","map":{"version":3,"names":["React","useEffect","useState","axios","Variables","toast","jsxDEV","_jsxDEV","AdminApproval","_s","registers","setRegisters","fetchItems","get","API_URL","then","response","status","data","Error","catch","error","console","message","handleAccept","id","updatedRegisters","map","register","updateStatusInDatabase","handleReject","put","success","className","children","index","name","fileName","_jsxFileName","lineNumber","columnNumber","role","specialization","gender","onClick","_c","$RefreshReg$"],"sources":["C:/Kanini Software Solutions/React(BigBang)/Front-End/hospitalmanagement/src/Component/Approval/AdminApproval.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Variables } from '../Variable';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Approval.css';\r\n\r\nfunction AdminApproval() {\r\n  const [registers, setRegisters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  const fetchItems = () => {\r\n    axios\r\n      .get(Variables.API_URL + 'Users')\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          setRegisters(response.data);\r\n        } else {\r\n          throw new Error('Failed to fetch registers');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching registers:', error);\r\n        toast.error('Error fetching registers:', error.message);\r\n      });\r\n  };\r\n\r\n  const handleAccept = (id) => {\r\n    const updatedRegisters = registers.map((register) => {\r\n      if (register.id === id) {\r\n        return { ...register, status: 'approved' };\r\n      }\r\n      return register;\r\n    });\r\n    setRegisters(updatedRegisters);\r\n    updateStatusInDatabase(id, 'approved');\r\n  };\r\n\r\n  const handleReject = (id) => {\r\n    const updatedRegisters = registers.map((register) => {\r\n      if (register.id === id) {\r\n        return { ...register, status: 'declined' };\r\n      }\r\n      return register;\r\n    });\r\n    setRegisters(updatedRegisters);\r\n    updateStatusInDatabase(id, 'declined');\r\n  };\r\n  const updateStatusInDatabase = (id, status) => {\r\n    axios\r\n      .put(Variables.API_URL + `Users/${id}`, { status })\r\n      .then((response) => {\r\n        toast.success('Status updated successfully');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating status:', error);\r\n        console.error('Response:', error.response); // Log the response object\r\n        toast.error('Error updating status:', error.message);\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"approval-container\">\r\n      {registers.map((register, index) => (\r\n        <div key={register.id} className={`card ${index % 4 === 0 ? 'first-card' : ''}`}>\r\n          <p>Name: {register.name}</p>\r\n          <p>Role: {register.role}</p>\r\n          <p>Specialization: {register.specialization}</p>\r\n          <p>Gender: {register.gender}</p>\r\n          <p>Status: {register.status}</p>\r\n          <div className=\"button-container\">\r\n            <button className=\"accept-button\" onClick={() => handleAccept(register.id)}>\r\n              Accept\r\n            </button>\r\n            <button className=\"reject-button\" onClick={() => handleReject(register.id)}>\r\n              Reject\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminApproval;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}